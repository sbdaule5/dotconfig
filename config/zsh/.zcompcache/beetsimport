beets_import='_beet_import () {
	local _ra_p1 _ra_p2 _ra_left _ra_right _ra_com expl tmp nm="$compstate[nmatches]" 
	local _ra_actions _ra_line="${(pj:\0:)${(@)words[1,CURRENT - 1]:Q}}"$'\''\0'\''"$PREFIX" 
	_ra_actions=() 
	zregexparse -c _ra_p1 _ra_p2 "$_ra_line" $'\''/[^\0]##\0/'\'' $'\''/import\0/'\'' $'\''('\'' $'\''/-h\0/'\'' $'\''|'\'' $'\''/-c\0/'\'' $'\''|'\'' $'\''/-C\0/'\'' $'\''|'\'' $'\''/-m\0/'\'' $'\''|'\'' $'\''/-w\0/'\'' $'\''|'\'' $'\''/-W\0/'\'' $'\''|'\'' $'\''/-a\0/'\'' $'\''|'\'' $'\''/-A\0/'\'' $'\''|'\'' $'\''/-p\0/'\'' $'\''|'\'' $'\''/-P\0/'\'' $'\''|'\'' $'\''/-q\0/'\'' $'\''|'\'' $'\''/--quiet-fallback=QUIET_FALLBACK\0/'\'' $'\''|'\'' $'\''/-l\0/'\'' $'\''/[^\0]##\0/'\'' $'\'':_ra_comp $\'\''file:file:_files\'\'''\'' $'\''|'\'' $'\''/-s\0/'\'' $'\''|'\'' $'\''/-t\0/'\'' $'\''|'\'' $'\''/-L\0/'\'' $'\''('\'' $'\''/(acoustid_fingerprint|acoustid_id|added|album|album_id|albumartist|albumartist_credit|albumartist_sort|albumartists|albumartists_credit|albumartists_sort|albumdisambig|albumstatus|albumtotal|albumtype|albumtypes|arranger|artist|artist_credit|artist_sort|artists|artists_credit|artists_ids|artists_sort|artpath|asin|barcode|bitdepth|bitrate|bitrate_mode|bpm|catalognum|channels|comments|comp|composer|composer_sort|country|data_source|day|disc|discogs_albumid|discogs_artistid|discogs_labelid|disctitle|disctotal|encoder|encoder_info|encoder_settings|filesize|format|genre|grouping|id|initial_key|isrc|label|language|last_played|length|lyricist|lyrics|mb_albumartistid|mb_albumartistids|mb_albumid|mb_artistid|mb_artistids|mb_releasegroupid|mb_releasetrackid|mb_trackid|mb_workid|media|month|mtime|original_day|original_month|original_year|path|play_count|r128_album_gain|r128_track_gain|rating|release_group_title|releasegroupdisambig|remixer|rg_album_gain|rg_album_peak|rg_track_gain|rg_track_peak|samplerate|script|singleton|skip_count|style|title|track|track_alt|trackdisambig|tracktotal|work|work_disambig|year):[^\0]##\0/'\'' $'\'':_ra_comp $\'\''query:query string:{_beet_query}\'\'''\'' $'\'')'\'' $'\''#'\'' $'\''|'\'' $'\''/-i\0/'\'' $'\''|'\'' $'\''/-I\0/'\'' $'\''|'\'' $'\''/-R\0/'\'' $'\''|'\'' $'\''/-r\0/'\'' $'\''|'\'' $'\''/--from-scratch\0/'\'' $'\''|'\'' $'\''/--flat\0/'\'' $'\''|'\'' $'\''/-g\0/'\'' $'\''|'\'' $'\''/--pretend\0/'\'' $'\''|'\'' $'\''/-S\0/'\'' $'\''/[^\0]##\0/'\'' $'\''|'\'' $'\''/--from-logfile=PATH\0/'\'' $'\''|'\'' $'\''/--set=FIELD=VALUE\0/'\'' $'\''|'\'' $'\''/[]/'\'' $'\'':_ra_comp $\'\''options:import options:(( -h\\\\:show\\\\ this\\\\ help\\\\ message\\\\ and\\\\ exit -c\\\\:copy\\\\ tracks\\\\ into\\\\ library\\\\ directory\\\\ \\\\(default\\\\) -C\\\\:dont\\\\ copy\\\\ tracks\\\\ \\\\(opposite\\\\ of\\\\ -c\\\\) -m\\\\:move\\\\ tracks\\\\ into\\\\ the\\\\ library\\\\ \\\\(overrides\\\\ -c\\\\) -w\\\\:write\\\\ new\\\\ metadata\\\\ to\\\\ files\\\\ tags\\\\ \\\\(default\\\\) -W\\\\:dont\\\\ write\\\\ metadata\\\\ \\\\(opposite\\\\ of\\\\ -w\\\\) -a\\\\:infer\\\\ tags\\\\ for\\\\ imported\\\\ files\\\\ \\\\(default\\\\) -A\\\\:dont\\\\ infer\\\\ tags\\\\ for\\\\ imported\\\\ files\\\\ \\\\(opposite\\\\ of\\\\ -a\\\\) -p\\\\:resume\\\\ importing\\\\ if\\\\ interrupted -P\\\\:do\\\\ not\\\\ try\\\\ to\\\\ resume\\\\ importing -q\\\\:never\\\\ prompt\\\\ for\\\\ input-\\\\ skip\\\\ albums\\\\ instead --quiet-fallback=QUIET_FALLBACK\\\\:decision\\\\ in\\\\ quiet\\\\ mode\\\\ when\\\\ no\\\\ strong\\\\ match-\\\\ skip\\\\ or\\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ \\\\ asis -l\\\\:file\\\\ to\\\\ log\\\\ untaggable\\\\ albums\\\\ for\\\\ later\\\\ review -s\\\\:import\\\\ individual\\\\ tracks\\\\ instead\\\\ of\\\\ full\\\\ albums -t\\\\:always\\\\ confirm\\\\ all\\\\ actions -L\\\\:retag\\\\ items\\\\ matching\\\\ a\\\\ query -i\\\\:skip\\\\ already-imported\\\\ directories -I\\\\:do\\\\ not\\\\ skip\\\\ already-imported\\\\ directories -R\\\\:do\\\\ not\\\\ record\\\\ skipped\\\\ files\\\\ during\\\\ incremental\\\\ import -r\\\\:record\\\\ skipped\\\\ files\\\\ during\\\\ incremental\\\\ import --from-scratch\\\\:erase\\\\ existing\\\\ metadata\\\\ before\\\\ applying\\\\ new\\\\ metadata --flat\\\\:import\\\\ an\\\\ entire\\\\ tree\\\\ as\\\\ a\\\\ single\\\\ album -g\\\\:group\\\\ tracks\\\\ in\\\\ a\\\\ folder\\\\ into\\\\ separate\\\\ albums --pretend\\\\:just\\\\ print\\\\ the\\\\ files\\\\ to\\\\ import -S\\\\:restrict\\\\ matching\\\\ to\\\\ a\\\\ specific\\\\ metadata\\\\ backend\\\\ ID --from-logfile=PATH\\\\:read\\\\ skipped\\\\ paths\\\\ from\\\\ an\\\\ existing\\\\ logfile --set=FIELD=VALUE\\\\:set\\\\ the\\\\ given\\\\ fields\\\\ to\\\\ the\\\\ supplied\\\\ values ))\'\'''\'' $'\'')'\'' $'\''#'\'' $'\''/[^\0]##\0/'\'' $'\'':_ra_comp $\'\''file:file:_files\'\'''\'' $'\''#'\''
	case "$?" in
		(0 | 2) _message "no more arguments" ;;
		(1) if [[ "$_ra_line[_ra_p1 + 1, -1]" = *$'\''\0'\''* ]]
			then
				_message "parse failed before current word"
			else
				_ra_left="$_ra_line[_ra_p1 + 1, _ra_p2]" 
				_ra_right="$_ra_line[_ra_p2 + 1, -1]" 
				compset -p $(( $#PREFIX - $#_ra_line + $_ra_p1 ))
				(( $#_ra_actions )) && _alternative "$_ra_actions[@]"
			fi ;;
		(3) _message "invalid regex" ;;
	esac
	[[ nm -ne "$compstate[nmatches]" ]]
}'
